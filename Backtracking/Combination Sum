lass Solution {
  public:
    void solve(vector<int>& arr,int i, int sum ,vector<int>& v ,
                vector<vector<int>>& ans){
        if(sum==0){
            ans.push_back(v);
            return ;
        }
        
        while(i < arr.size() && sum-arr[i]>=0){
            v.push_back(arr[i]);
            solve(arr, i, sum-arr[i] , v, ans );
            i++;
            v.pop_back();
        }
    }
    vector<vector<int> > combinationSum(vector<int> &arr, int sum) {
        sort(arr.begin(),arr.end());
        
        arr.erase(unique(arr.begin(), arr.end()), arr.end());
        
        vector<int> v;
        vector<vector<int>> ans;
        solve(arr, 0, sum, v, ans);
        return ans;
    }
};
