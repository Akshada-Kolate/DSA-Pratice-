
class Solution{
    public:
    void solve( int i, int j, vector<vector<int>> &a,  int n  , string s,vector<string> &ans ,vector<vector<int>> &vis ){
       if(i==0 && j==0){
           ans.push_back(s);
           return ;
       }
       //down
        if(i+1<n && !vis[i+1][j] && a[i+1][j]==1){
           vis[i+1][j]=1;
           solve(i+1,j,m,n,ans,s+'D',vis);
           vis[i+1][j]=0;
        }
        //up
        if(i-1>=0 && !vis[i-1][j] && a[i+1][j]==1){
           vis[i-1][j]=1;
           solve(i-1,j,m,n,ans,s+'U',vis);
           vis[i-1][j]=0;
        }
        //right
        if(j+1<n && !vis[i][j+1] && a[i][j+1]==1){
           vis[i][j+1]=1;
           solve(i,j+1,m,n,ans,s+'R',vis);
           vis[i][j+1]=0;
        }
        
        if(j-1>=0 && !vis[i][j-1] && a[i][j-1]==1){
           vis[i][j-1]=1;
           solve(i,j-1,m,n,ans,s+'D',vis);
           vis[i][j-1]=0;
        }
       
    }
    
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
       vector<string> ans;
       vector<vector<int> vis(n,vector<string> (n,0));
       if(m[0][0]==1){
           solve(0,0,m,n,"",ans, vis);
       }
       return ans;
    }
};
