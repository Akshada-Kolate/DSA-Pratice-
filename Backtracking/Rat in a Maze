

class Solution{
    // D L R U
    vector<string> res; 
    void rec(vector<vector<int>> &m, int n, int i, int j, string s, vector<vector<bool>> &vis) {
        
        if(i == n-1 and j == n-1) {
            res.push_back(s); 
            return; 
        }
        if(i+1 < n and vis[i+1][j] == false and m[i+1][j] == 1 ) {
            vis[i][j] = true; 
            rec(m, n, i+1, j, s+"D", vis);
            vis[i][j] = false; 
        }
        if(j-1 >= 0 and vis[i][j-1] == false and m[i][j-1] == 1 ) {
            vis[i][j] = true; 
            rec(m, n, i, j-1, s+"L", vis);
            vis[i][j] = false; 
        }
        if(j+1 < n and vis[i][j+1] == false and m[i][j+1] == 1 ) {
            vis[i][j] = true; 
            rec(m, n, i, j+1, s+"R", vis);
            vis[i][j] = false; 
        }
        if(i-1 >= 0 and vis[i-1][j] == false and m[i-1][j] == 1 ) {
            vis[i][j] = true; 
            rec(m, n, i-1, j, s+"U", vis);
            vis[i][j] = false; 
        }
        
    }
    public:
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<vector<bool>> vis(n, vector<bool>(n, false)); 
        if(m[0][0] == 1)
            rec(m, n, 0, 0, "", vis); 
        
        return res; 
    }
};

    
