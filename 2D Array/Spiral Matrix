class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n=matrix.size() , m= matrix[0].size() ;
        int left =0 , top =0 , right =matrix[0].size()-1 ; 
        int down = matrix.size()-1 , dir=0;
        vector<int> ans;
        while(left<=right && top<= down){
            if(dir==0){
                for(int j= left ; j<= right ; j++){
                   ans.push_back(matrix[top][j]);
                }
                top++;
                dir=1;
            }
            else if(dir==1){
                for(int i=top ; i<=down ;i++){
                    ans.push_back(matrix[i][right]);
                }
                dir=2;
                right--;
            }
             else if(dir==2){
                for(int j=right ; j>=left ;j--){
                    ans.push_back(matrix[down][j]);
                }
                dir=3;
                down--;
            }
            else if(dir==3){
                 for(int i=down ; i>=top ;i--){
                    ans.push_back(matrix[i][left]);
                }
                dir=0;
                left++;
            }
        }
        return ans;
    }
};
