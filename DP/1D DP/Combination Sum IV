class Solution {
public:
    
    int sumcombine(vector<int>& nums, int target){
        if(target ==0) return 1;
        if(target<0) return 0;
        int sum=0;
        for(int i= 0 ;i< nums.size() ; i++){
        
            sum += sumcombine(nums, target-nums[i]);
        }
        return sum;
        
    }
    
    int combinationSum4(vector<int>& nums, int target) {
        return sumcombine(nums, target);
    }
};


Tabulation : 

class Solution {
public:
    
    int combinationSum4(vector<int>& nums, int target) {
      vector<uint> dp(target + 1); dp[0] = 1;
	
	for (int curTarget = 1; curTarget <= target; curTarget++) 
        for (auto num:nums)    
            if (curTarget - num>=0)    
				dp[curTarget] += dp[curTarget - num];   
    return dp[target];
    }
};
